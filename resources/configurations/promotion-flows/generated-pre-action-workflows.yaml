apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: pre-action
  annotations:
    codefresh.io/workflow-origin: promotion
    version: 0.0.1
spec:
  arguments:
    parameters:
      - name: APP_NAMESPACE
      - name: APP_NAME
      - name: REPO_URL
      - name: BRANCH
      - name: PATH
      - name: PRODUCT_NAME
      - name: PROMOTION_FLOW_NAME
      - name: RELEASE_ID
  entrypoint: main-workflow
  templates:
    - name: main-workflow
      steps:
        - - name: create-jira-ticket
            template: create-jira-ticket

    - name: create-jira-ticket
      script:
        image: curlimages/curl:7.85.0
        command:
          - sh
        source: |
          JIRA_BASE_URL=$(kubectl get secret jira-credentials -n {{workflow.parameters.APP_NAMESPACE}} -o jsonpath='{.data.base_url}' | base64 -d)
          JIRA_USER=$(kubectl get secret jira-credentials -n {{workflow.parameters.APP_NAMESPACE}} -o jsonpath='{.data.username}' | base64 -d)
          JIRA_API_TOKEN=$(kubectl get secret jira-credentials -n {{workflow.parameters.APP_NAMESPACE}} -o jsonpath='{.data.api_token}' | base64 -d)
          AUTH_HEADER="Authorization: Basic $(echo -n ${JIRA_USER}:${JIRA_API_TOKEN} | base64)"
          PAYLOAD=$(cat <<EOF
          {
            "fields": {
               "project": {
                  "key": "PROJ"
               },
               "summary": "Promotion started for {{workflow.parameters.PRODUCT_NAME}} release {{workflow.parameters.RELEASE_ID}}",
               "description": "Promotion flow {{workflow.parameters.PROMOTION_FLOW_NAME}} started for app {{workflow.parameters.APP_NAME}}.",
               "issuetype": {
                  "name": "Task"
               }
            }
          }
          EOF
          )
          RESPONSE=$(curl -s -w "%{http_code}" -o /tmp/response.json -X POST \
            -H "Content-Type: application/json" \
            -H "${AUTH_HEADER}" \
            --data "${PAYLOAD}" \
            "${JIRA_BASE_URL}/rest/api/2/issue")
          HTTP_CODE=$(tail -n1 <<< "$RESPONSE")
          if [ "$HTTP_CODE" != "201" ]; then
            echo "Failed to create Jira ticket. Response:"
            cat /tmp/response.json
            exit 1
          fi
          ISSUE_KEY=$(jq -r '.key' /tmp/response.json)
          echo "Created Jira issue: $ISSUE_KEY"
          echo $ISSUE_KEY > /tmp/issue_key.txt
      outputs:
        artifacts:
          - name: jira-issue-key
            path: /tmp/issue_key.txt