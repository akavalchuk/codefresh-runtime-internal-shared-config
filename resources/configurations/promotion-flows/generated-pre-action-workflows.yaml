apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: pre-action
  annotations:
    codefresh.io/workflow-origin: promotion
    version: 0.0.1
spec:
  arguments:
    parameters:
      - name: APP_NAMESPACE
      - name: APP_NAME
      - name: REPO_URL
      - name: BRANCH
      - name: PATH
      - name: PRODUCT_NAME
      - name: PROMOTION_FLOW_NAME
      - name: RELEASE_ID
  entrypoint: main-workflow
  templates:
    - name: main-workflow
      dag:
        tasks:
          - name: create-jira-ticket
            template: create-jira-ticket

    - name: create-jira-ticket
      inputs:
        parameters:
          - name: APP_NAMESPACE
          - name: APP_NAME
          - name: PRODUCT_NAME
          - name: PROMOTION_FLOW_NAME
          - name: RELEASE_ID
      container:
        image: curlimages/curl:7.85.0
        command:
          - sh
          - -c
        args:
          - |
            JIRA_DOMAIN="your-domain.atlassian.net"
            JIRA_API="/rest/api/2/issue"
            AUTH_HEADER="Authorization: Basic $(cat /secrets/jira-auth | base64 -w0)"
            DATA=$(cat <<EOF
            {
              "fields": {
                "project": {
                  "key": "PROJKEY"
                },
                "summary": "Promotion started for {{inputs.parameters.PRODUCT_NAME}} release {{inputs.parameters.RELEASE_ID}}",
                "description": "Promotion flow '{{inputs.parameters.PROMOTION_FLOW_NAME}}' started for app '{{inputs.parameters.APP_NAME}}' in namespace '{{inputs.parameters.APP_NAMESPACE}}'.",
                "issuetype": {
                  "name": "Task"
                }
              }
            }
            EOF
            )
            RESPONSE=$(curl -s -X POST -H "Content-Type: application/json" -H "$AUTH_HEADER" --data "$DATA" "https://${JIRA_DOMAIN}${JIRA_API}")
            ISSUE_KEY=$(echo $RESPONSE | jq -r '.key')
            echo "Jira ticket created: $ISSUE_KEY"
            echo $ISSUE_KEY > /tmp/issue_key
        volumeMounts:
          - name: jira-secret
            mountPath: /secrets
            readOnly: true
      outputs:
        artifacts:
          - name: issue-key-file
            path: /tmp/issue_key
      volumes:
        - name: jira-secret
          secret:
            secretName: jira-credentials