apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: post-action
  annotations:
    codefresh.io/workflow-origin: promotion
    version: 0.0.1
spec:
  arguments:
    parameters:
      - name: APP_NAMESPACE
      - name: APP_NAME
      - name: REPO_URL
      - name: BRANCH
      - name: PATH
      - name: COMMIT_SHA
        value: ''
      - name: COMMIT_MESSAGE
        value: ''
      - name: COMMIT_AUTHOR
        value: ''
      - name: COMMIT_DATE
        value: ''
      - name: PRODUCT_NAME
      - name: APP_VERSION
      - name: PROMOTION_FLOW_NAME
      - name: RELEASE_ID
  entrypoint: main-workflow
  templates:
    - name: main-workflow
      steps:
        - - name: close-jira-ticket
            template: close-jira-ticket

    - name: close-jira-ticket
      script:
        image: curlimages/curl:7.85.0
        command:
          - sh
        source: |
          JIRA_BASE_URL=$(kubectl get secret jira-credentials -n {{workflow.parameters.APP_NAMESPACE}} -o jsonpath='{.data.base_url}' | base64 -d)
          JIRA_USER=$(kubectl get secret jira-credentials -n {{workflow.parameters.APP_NAMESPACE}} -o jsonpath='{.data.username}' | base64 -d)
          JIRA_API_TOKEN=$(kubectl get secret jira-credentials -n {{workflow.parameters.APP_NAMESPACE}} -o jsonpath='{.data.api_token}' | base64 -d)
          AUTH_HEADER="Authorization: Basic $(echo -n ${JIRA_USER}:${JIRA_API_TOKEN} | base64)"
          
          # ISSUE_KEY must be passed in some manner, assume annotation or previous workflow can store it externally or we need it passed externally. Here, let's assume it's passed as RELEASE_ID which holds the issue key.
          ISSUE_KEY="{{workflow.parameters.RELEASE_ID}}"
          if [ -z "$ISSUE_KEY" ]; then
            echo "No Jira issue key (RELEASE_ID) provided to close."
            exit 1
          fi

          # Get transition id for "Done"
          TRANSITIONS_JSON=$(curl -s -H "${AUTH_HEADER}" -X GET "${JIRA_BASE_URL}/rest/api/2/issue/${ISSUE_KEY}/transitions")
          TRANSITION_ID=$(echo "$TRANSITIONS_JSON" | jq -r '.transitions[] | select(.name=="Done") | .id')
          if [ -z "$TRANSITION_ID" ]; then
            echo "No 'Done' transition found for issue ${ISSUE_KEY}."
            exit 1
          fi

          PAYLOAD=$(cat <<EOF
          {
            "transition": {
              "id": "${TRANSITION_ID}"
            }
          }
          EOF
          )
          RESPONSE=$(curl -s -w "%{http_code}" -o /tmp/response.json -X POST \
            -H "Content-Type: application/json" \
            -H "${AUTH_HEADER}" \
            --data "${PAYLOAD}" \
            "${JIRA_BASE_URL}/rest/api/2/issue/${ISSUE_KEY}/transitions")
          HTTP_CODE=$(tail -n1 <<< "$RESPONSE")
          if [ "$HTTP_CODE" != "204" ]; then
            echo "Failed to transition Jira issue to Done. Response:"
            cat /tmp/response.json
            exit 1
          fi
          echo "Jira issue ${ISSUE_KEY} transitioned to Done."